
node + ts
https://qiduoduo.feishu.cn/wiki/wikcnqR2DaQX18iRjlywe7yBpMc


MobaXterm

WindTerm


1. 项目优化（工程化、代码架构、目录结构、冗余文件/代码）
2. 代码规范统一约束限制（eslint）
3. vue3项目
4. 跨端应用——uniapp



vue3中已弃用mixin、filters



向下管理：
1. 要有服务型领导的思维，帮助手下的人解决问题，然后让他们形成文档，下次自行解决。 [重视文档]
2. 把团队的人进行金字塔梳理 关注团队中金字塔最上面二到三个人，和最下面的一两个人。制定使用计划和成长计划
[人才盘点]
3. 不要想要盯住每一个人。让金字塔顶上的二三个人，分担影响你时间规划的事情。带了“新人”做事情。 [团队建设]
4. 关注员工的交付时间和进度，不要过多关注员工什么时候在干什么。 [关注目标]
5. 最后一点最为重要，通过定期的 1v1 聊天，了解员工的个人规划，工作时间，工作习惯，工作追求，工作舒适度等。尽量解决对目前不满意的点。 不求样样满意，能做到没有不满意已经很好了。 [知人善用]


向上管理：
1. 跟领导约定好，进度的 review 模式和周期，不要等领导来问。
2. 不要当领导面承诺自己估算的事情。要先回复，我下来核实一下，然后跟团队商量。 [团队意识]
3. 先说最坏的结果，在报理想的时间。
4. 遇到解决不了的问题，要向上求助资源，以完成目标为导向，不要怕面子问题。 “好的领导”看到的是你积极解决问题的态度，“很少会”质疑你的能力。




作为 Tech Lead ，除了关注技术，更需要关注团队。软件开发是团队活动，任何团队的问题都会直接影响软件项目的交付结果。例如：

团队组建阶段，人员配备不当可能会对项目的交付产生负面影响。
在开发过程中，团队成员没有充分表达自己的疑惑和问题，或针对某些问题过度争吵，这可能会导致工作效率下降和团队成员的不满。
缺乏清晰的工作流程和规范，导致沟通不畅、重复工作和质量问题。
在高效的执行期，开发效率很高，但沟通会因为对上下文和方案有足够的认知而减少，这可能会导致团队趋于保守和僵化。


comment:
这要看你团队有多大。十来个人的小团队，搞个规范流程，让手下各司其职也就够了。就这么大猫小猫三两只，自己还是多做实事吧。
如果手下上百，流程规范还是要有。但你要理解公司的产品和人，搞清楚了，才好有效管理。平常更多的是给部门定目标和计划，给下面分任务，让手下各团队无缝协作。



想法：技术革新
别说微信的 API 了，说说开发工具吧，项目稍微大一些，开发工具就老崩溃。硬件：m1 max 32G, 软件： 开发工具设置的 4G 内存

Go系列
the ultimate go


Pocket Capture
用模拟器，然后用 Proxifier 将模拟器的进程转发到本地监听的端口上就能抓了
直接手机连电脑热点，然后用 wireshark 抓，如果你要知道报文内容就先要知道里面的协议结构再解出来。
https://www.v2ex.com/t/715477#reply48



自己不方便回国但又想家人团聚的可以这样操作 可以办理日本签证
​日本签证可以免签菲律宾7天，可延期14天，合计21天。费用低且好办理